---
# tasks file for k8s-control-plane
# This playbook is for the control plane node in a Kubernetes cluster.
# It configures the node, installs necessary packages, and initializes the Kubernetes cluster.
# It assumes that the node is a control plane node and will be running the Kubernetes API server.
# The playbook is designed to be run on the control plane node in the cluster.
# It uses the Ansible lineinfile module to ensure that the kubelet configuration is set correctly.
# It also uses the Ansible service module to restart the kubelet service after making changes.
# The playbook includes tasks to install necessary packages, configure the node IP, and initialize the Kubernetes cluster.
# It also sets up the kubeconfig for the vagrant user and installs necessary components like Calico, Nginx Ingress, and Metric-Server.
# It generates a join command for worker nodes and creates a vimrc file with custom settings.

- name: Set a hostname
  ansible.builtin.hostname:
    name: k8s-control-plane

- name: Configure node ip
  lineinfile:
    create: true
    path: /etc/default/kubelet
    line: KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}

- name: Restart kubelet
  ansible.builtin.service:
    name: kubelet
    daemon_reload: yes
    state: restarted     

- name: Initialize the Kubernetes cluster using kubeadm
  command: kubeadm init --apiserver-advertise-address={{ node_ip }} --apiserver-cert-extra-sans={{ node_ip }} --node-name k8s-control-plane --pod-network-cidr=10.10.42.0/16
  # ignore_errors: true

- name: Setup kubeconfig for vagrant user
  command: "{{ item }}"
  with_items:
    - mkdir -p /home/vagrant/.kube
    - cp -i /etc/kubernetes/admin.conf /home/vagrant/.kube/config
    - chown vagrant:vagrant /home/vagrant/.kube/config

- name: Copy admin.conf to user's kube config
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /home/vagrant/.kube/config
    remote_src: yes
    owner: vagrant

- name: Install Pod network (Calico)
  become_user: vagrant
  shell: kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/v3.27.0/manifests/calico.yaml 
  args:
    chdir: $HOME 

- name: Install Nginx Ingress
  become_user: vagrant
  shell: kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.11.2/deploy/static/provider/baremetal/deploy.yaml 
  args:
    chdir: $HOME

- name: Install Metric-Server
  become_user: vagrant
  shell: kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml 
  args:
    chdir: $HOME
      
- name: Install kubecctl autocompletion
  become_user: vagrant
  shell: |
          kubectl completion bash | sudo tee /etc/bash_completion.d/kubectl > /dev/null 
          sudo chmod a+r /etc/bash_completion.d/kubectl
          echo 'alias k=kubectl' >>~/.bashrc 
          echo 'complete -o default -F __start_kubectl k' >>~/.bashrc
  args:
    chdir: $HOME         

- name: Generate join command
  command: kubeadm token create --print-join-command
  register: join_command

- name: Copy join command to local file
  local_action: copy content="{{ join_command.stdout_lines[0] }}" dest="./join-command"

- name: Create vimrc file
  file:
    path: "/home/vagrant/.vimrc"
    state: "touch"

- name: Set config for vimrc
  blockinfile:
    path: "/home/vagrant/.vimrc"
    block: |
            set expandtab
            set tabstop=2
            set shiftwidth=2

# - name: Copy .vimrc
#   ansible.builtin.copy:
#     src: .
#     dest: /home/vagrant/.vimrc
#     owner: vagrant
#     group: vagrant
